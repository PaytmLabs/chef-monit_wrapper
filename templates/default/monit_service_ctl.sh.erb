#!/usr/bin/env bash

# Copyright 2015 ClearStory Data, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set +e -u +o pipefail

MONIT_START_STOP_TIMEOUT_SEC=60

if [ $# -ne 2 ]; then
  echo "Start or stop a Monit service, and wait for the status to be updated." >&2
  echo "Multiple attempts are made if another action is already in progress." >&2
  echo >&2
  echo "Usage: ${0##*/} <action> <service_name>" >&2
  echo "<action> is 'start' or 'stop'." >&2
  exit 1
fi

action=$1
service_name=$2

if [ "${action}" != "start" ] && [ "${action}" != "stop" ]; then
  echo "Invalid action: ${action} ('start' or 'stop' expected)." >&2
  exit 1
fi

monit_attempt=0

while true; do
  monit_attempt=$(( "${monit_attempt}" + 1 ))
  if sudo <%= @monit_executable %> "${action}" "${service_name}" 2>&1 >/dev/null | \
      grep "Other action already in progress -- please try again later"; then
    if [ "${monit_attempt}" -ge 5 ]; then
      echo "Not retrying to ${action} ${service_name} after ${monit_attempt} attempts" >&2
      exit 1
    fi
    echo "Monit is busy with a pending action, waiting (attempt ${monit_attempt})" >&2
    sleep 10
    continue
  fi

  # The monit command failed, and we don't know how to handle this failure.
  if [ "${PIPESTATUS[0]}" -ne 0 ]; then
    echo "Failed to ${action} ${service_name}" >&2
    exit 1
  fi

  # Success: break and wait for status to stabilize.
  break
done
set -e -o pipefail

echo 'Waiting for ${service_name} to ${action}'
attempt=0
while ! sudo <%= @monit_executable %> summary | \
      egrep "${service_name}.*${expected_state}$" >/dev/null; do
  attempt=$(( $attempt + 1 ))
  if [ $attempt -gt "${MONIT_START_STOP_TIMEOUT_SEC}" ]; then
    echo 'Timed out waiting for ${service_name} to ${action}' >&2
    exit 1
  fi
  sleep 1
  if [ "$(( $attempt % 30 ))" -eq 0 ]; then
    echo 'Re-trying the operation'
    ( set -x; sudo "<%= @monit_executable %>" "${action}" "${service_name}" )
  fi
done
